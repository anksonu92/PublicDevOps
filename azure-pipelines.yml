# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
 bkstrgrg: 'example2'
 bkstrg: 'szrxtcbklghvjlhhj'
 bkcontainer: 'tfstate'
 bkstrgkey: 'devpipeline.terraform.tfstate'

stages:
 - stage: tfvalidate
   jobs:
    - job: validate
      continueOnError: false
      steps:
        - task: TerraformInstaller@0
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV3@3
          displayName: init
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'Visual Studio Enterprise Subscription-new(3)(8512a432-b466-4c66-8947-7f750e26c92d)'
            backendAzureRmResourceGroupName: '$(bkstrgrg)'
            backendAzureRmStorageAccountName: '$(bkstrg)'
            backendAzureRmContainerName: '$(bkcontainer)'
            backendAzureRmKey: '$(bkstrgkey)'
        
        - task: TerraformTaskV3@3
          displayName: validate
          inputs:
            provider: 'azurerm'
            command: 'validate'
            
 - stage: tfdeploy
   condition: succeeded('tfvalidate')
   dependsOn: tfvalidate
   jobs:
     - job: apply
       steps:
         - task: TerraformInstaller@0
           displayName: tfinstall
           inputs:
            terraformVersion: 'latest'
         - task: TerraformTaskV3@3
           displayName: init
           inputs:
             provider: 'azurerm'
             command: 'init'
             backendServiceArm: 'Visual Studio Enterprise Subscription-new(3)(8512a432-b466-4c66-8947-7f750e26c92d)'
             backendAzureRmResourceGroupName: '$(bkstrgrg)'
             backendAzureRmStorageAccountName: '$(bkstrg)'
             backendAzureRmContainerName: '$(bkcontainer)'
             backendAzureRmKey: '$(bkstrgkey)'
         - task: TerraformTaskV3@3
           inputs:
            provider: 'azurerm'
            command: 'plan'
            environmentServiceNameAzureRM: 'Visual Studio Enterprise Subscription-new(8512a432-b466-4c66-8947-7f750e26c92d)'
         - task: TerraformTaskV3@3
           inputs:
             provider: 'azurerm'
             command: 'apply'
             environmentServiceNameAzureRM: 'Visual Studio Enterprise Subscription-new(8512a432-b466-4c66-8947-7f750e26c92d)'




   
    
        
        

 
